COVIDrw$location=="China" | COVIDrw$location=="Belgium" |
COVIDrw$location=="Denmark" | COVIDrw$location=="Cuba" |
COVIDrw$location=="Ireland" | COVIDrw$location=="South Korea" |
COVIDrw$location=="United Kingdom" | COVIDrw$location=="Cambodia" |
COVIDrw$location=="Israel" | COVIDrw$location=="Japan"|
COVIDrw$location==" Argentina"),]
#Creating CFR
COVIDrw$CFR <- (COVIDrw$total_deaths/COVIDrw$total_cases)*100
t.test(COVIDrw$CFR)
library("plotrix")
op <- std.error(COVIDrw$CFR)
op
COVIDrw$CFR[is.na(COVIDrw$CFR)] <- 0
t.test(COVIDrw$CFR[1:136], COVID2022rwemm$CFR, paired = TRUE, alternative = "two.sided")
setwd('D:\\Update3\\Update4\\Update5\\Update6')
COVIDrwem <- read.csv("excess-deaths-daily-per-100k-economist.csv")
COVIDrwem$date <-  COVIDrwem$Day
COVIDrwem$iso_code <-  COVIDrwem$Code
COVIDrwem$location <-  COVIDrwem$Entity
COVIDrwem <- subset(COVIDrwem, COVIDrwem$date == "2021-01-04") #5/29/2021
#Remove World and International information
COVIDrwem<-COVIDrwem[!(COVIDrwem$iso_code=="OWID_AFR" | COVIDrwem$iso_code=="OWID_ASI" | COVIDrwem$iso_code == "OWID_EUN" | COVIDrwem$iso_code=="OWID_EUR" | COVIDrwem$iso_code=="OWID_INT" |
COVIDrwem$iso_code=="OWID_HIC" | COVIDrwem$iso_code=="OWID_KOS" | COVIDrwem$iso_code=="OWID_LIC" | COVIDrwem$iso_code=="OWID_LMC" | COVIDrwem$iso_code=="OWID_NAM" |
COVIDrwem$iso_code == "OWID_OCE" | COVIDrwem$iso_code=="OWID_SAM"| COVIDrwem$iso_code=="OWID_UMC" | COVIDrwem$iso_code=="OWID_WRL" | COVIDrwem$iso_code=="PRK"),]
COVIDrwem <- COVIDrwem[!(COVIDrwem$location=="United Arab Emirates" |
COVIDrwem$location=="Chile" | COVIDrwem$location=="Italy" |
COVIDrwem$location=="Singapore" | COVIDrwem$location=="Qatar" |
COVIDrwem$location=="Bahrain" | COVIDrwem$location=="Portugal" |
COVIDrwem$location=="Uruguay" | COVIDrwem$location=="Canada" |
COVIDrwem$location=="China" | COVIDrwem$location=="Belgium" |
COVIDrwem$location=="Denmark" | COVIDrwem$location=="Cuba" |
COVIDrwem$location=="Ireland" | COVIDrwem$location=="South Korea" |
COVIDrwem$location=="United Kingdom" | COVIDrwem$location=="Cambodia" |
COVIDrwem$location=="Israel" | COVIDrwem$location=="Japan"|
COVIDrwem$location=="Argentina"),]
COVIDrwemm <- merge(COVIDrwem, COVIDrw, by=c("location"))
COVIDrwemm <- COVIDrwemm[ which(COVIDrwemm$population >= 1000000), ]
nrow(COVIDrwemm)
#Creating CFR
t.test(COVIDrwemm$estimated_daily_excess_deaths_per_100k)
library("plotrix")
op <- std.error(COVIDrwemm$estimated_daily_excess_deaths_per_100k)
op
t.test(COVIDrwemm$estimated_daily_excess_deaths_per_100k[1:136], COVID2022rwemm$estimated_daily_excess_deaths_per_100k, paired = TRUE, alternative = "two.sided")
#2022
#SSA
##Descriptive CFR
setwd('D:\\Update3\\Update4\\Update5\\Update6')
COVID2022ssa <- read.csv("owid-covid-data.csv")
#Remove World and International information
COVID2022ssa<-COVID2022ssa[(COVID2022ssa$location=="Angola" | COVID2022ssa$location=="Benin" | COVID2022ssa$location=="Botswana" | COVID2022ssa$location=="Burkina Faso" |
COVID2022ssa$location=="Burundi" | COVID2022ssa$location=="Cameroon" | COVID2022ssa$location=="Central African Republic" | COVID2022ssa$location=="Chad" |
COVID2022ssa$location=="Democratic Republic of Congo" | COVID2022ssa$location == "Congo" | COVID2022ssa$location == "Cote d'Ivoire" | COVID2022ssa$location=="Djibouti" |
COVID2022ssa$location=="Equatorial Guinea" | COVID2022ssa$location=="Eritrea" | COVID2022ssa$location=="Ethiopia" |
COVID2022ssa$location=="Gabon" | COVID2022ssa$location=="Gambia" | COVID2022ssa$location=="Ghana" | COVID2022ssa$location=="Guinea" |
COVID2022ssa$location=="Guinea-Bissau" | COVID2022ssa$location == "Kenya" | COVID2022ssa$location == "Lesotho" | COVID2022ssa$location=="Liberia" |
COVID2022ssa$location=="Madagascar" | COVID2022ssa$location=="Malawi" | COVID2022ssa$location=="Mali" |
COVID2022ssa$location=="Mauritania" | COVID2022ssa$location=="Mauritius" | COVID2022ssa$location=="Mozambique" | COVID2022ssa$location=="Namibia" |
COVID2022ssa$location=="Niger" | COVID2022ssa$location == "Nigeria" | COVID2022ssa$location == "Rwanda" | COVID2022ssa$location=="Senegal" |
COVID2022ssa$location=="Sierra Leone" | COVID2022ssa$location=="Somalia" | COVID2022ssa$location=="South Africa" |
COVID2022ssa$location=="South Sudan" | COVID2022ssa$location=="Sudan" | COVID2022ssa$location=="Tanzania" | COVID2022ssa$location=="Togo" |
COVID2022ssa$location=="Uganda" | COVID2022ssa$location == "Zambia" | COVID2022ssa$location == "Zimbabwe"),]
write.csv(COVID2022ssa,"COVID_SSA.csv")
COVID2022ssa <- read.csv("COVID_SSAU.csv") # Updated with previous reported data
View(COVID2022ssa)
COVID2022ssa <- subset(COVID2022ssa, COVID2022ssa$date == "2022-12-31") #5/29/2021
COVID2022ssa <- COVID2022ssa[ which(COVID2022ssa$population >= 1000000), ]
COVID2022ssa$total_vaccinations_per_hundred
#Creating CFR
COVID2022ssa$CFR <- (COVID2022ssa$total_deaths/COVID2022ssa$total_cases)*100
NROW(COVID2022ssa$CFR)
t.test(COVID2022ssa$CFR)
library("plotrix")
op <- std.error(COVID2022ssa$CFR)
op
t.test(COVID2022ssa$total_vaccinations_per_hundred)
library("plotrix")
op <- std.error(COVID2022ssa$total_vaccinations_per_hundred)
op
setwd('D:\\Update3\\Update4\\Update5\\Update6')
COVID2022ssaem <- read.csv("excess-deaths-daily-per-100k-economist.csv")
COVID2022ssaem$date <-  COVID2022ssaem$Day
COVID2022ssaem$iso_code <-  COVID2022ssaem$Code
COVID2022ssaem$location <-  COVID2022ssaem$Entity
COVID2022ssaem <- subset(COVID2022ssaem, COVID2022ssaem$date == "2022-12-30") #5/29/2021
#Remove World and International information
COVID2022ssaem<-COVID2022ssaem[(COVID2022ssaem$location=="Angola" |COVID2022ssaem$location=="Benin" |COVID2022ssaem$location=="Botswana" | COVID2022ssaem$location=="Burkina Faso" |
COVID2022ssaem$location=="Burundi" | COVID2022ssaem$location=="Cameroon" | COVID2022ssaem$location=="Central African Republic" | COVID2022ssaem$location=="Chad" |
COVID2022ssaem$location=="Democratic Republic of Congo" | COVID2022ssaem$location == "Congo" | COVID2022ssaem$location == "Cote d'Ivoire" | COVID2022ssaem$location=="Djibouti" |
COVID2022ssaem$location=="Equatorial Guinea" | COVID2022ssaem$location=="Eritrea" | COVID2022ssaem$location=="Ethiopia" |
COVID2022ssaem$location=="Gabon" | COVID2022ssaem$location=="Gambia" | COVID2022ssaem$location=="Ghana" | COVID2022ssaem$location=="Guinea" |
COVID2022ssaem$location=="Guinea-Bissau" | COVID2022ssaem$location == "Kenya" | COVID2022ssaem$location == "Lesotho" | COVID2022ssaem$location=="Liberia" |
COVID2022ssaem$location=="Madagascar" | COVID2022ssaem$location=="Malawi" |COVID2022ssaem$location=="Mali" |
COVID2022ssaem$location=="Mauritania" | COVID2022ssaem$location=="Mauritius" |COVID2022ssaem$location=="Mozambique" | COVID2022ssaem$location=="Namibia" |
COVID2022ssaem$location=="Niger" | COVID2022ssaem$location == "Nigeria" | COVID2022ssaem$location == "Rwanda" | COVID2022ssaem$location=="Senegal" |
COVID2022ssaem$location=="Sierra Leone" | COVID2022ssaem$location=="Somalia" | COVID2022ssaem$location=="South Africa" |
COVID2022ssaem$location=="South Sudan" | COVID2022ssaem$location=="Sudan" | COVID2022ssaem$location=="Tanzania" | COVID2022ssaem$location=="Togo" |
COVID2022ssaem$location=="Uganda" | COVID2022ssaem$location == "Zambia" | COVID2022ssaem$location == "Zimbabwe"),]
COVID2022ssaemm <- merge(COVID2022ssaem, COVID2022ssa, by=c("location"))
COVID2022ssaemm <- COVID2022ssaemm[ which(COVID2022ssaemm$population >= 1000000), ]
COVID2022ssaemm
nrow(COVID2022ssaemm)
#Creating CFR
t.test(COVID2022ssaemm$estimated_daily_excess_deaths_per_100k)
library("plotrix")
op <- std.error(COVID2022ssaemm$estimated_daily_excess_deaths_per_100k)
op
#2021
#SSA
##Descriptive CFR
setwd('D:\\Update3\\Update4\\Update5\\Update6')
#Remove World and International information
COVID2022ssaem<-COVID2022ssaem[(COVID2022ssaem$location=="Angola" |COVID2022ssaem$location=="Benin" |COVID2022ssaem$location=="Botswana" | COVID2022ssaem$location=="Burkina Faso" |
COVID2022ssaem$location=="Burundi" | COVID2022ssaem$location=="Cameroon" | COVID2022ssaem$location=="Central African Republic" | COVID2022ssaem$location=="Chad" |
COVID2022ssaem$location=="Democratic Republic of Congo" | COVID2022ssaem$location == "Congo" | COVID2022ssaem$location == "Cote d'Ivoire" | COVID2022ssaem$location=="Djibouti" |
COVID2022ssaem$location=="Equatorial Guinea" | COVID2022ssaem$location=="Eritrea" | COVID2022ssaem$location=="Ethiopia" |
COVID2022ssaem$location=="Gabon" | COVID2022ssaem$location=="Gambia" | COVID2022ssaem$location=="Ghana" | COVID2022ssaem$location=="Guinea" |
COVID2022ssaem$location=="Guinea-Bissau" | COVID2022ssaem$location == "Kenya" | COVID2022ssaem$location == "Lesotho" | COVID2022ssaem$location=="Liberia" |
COVID2022ssaem$location=="Madagascar" | COVID2022ssaem$location=="Malawi" |COVID2022ssaem$location=="Mali" |
COVID2022ssaem$location=="Mauritania" | COVID2022ssaem$location=="Mauritius" |COVID2022ssaem$location=="Mozambique" | COVID2022ssaem$location=="Namibia" |
COVID2022ssaem$location=="Niger" | COVID2022ssaem$location == "Nigeria" | COVID2022ssaem$location == "Rwanda" | COVID2022ssaem$location=="Senegal" |
COVID2022ssaem$location=="Sierra Leone" | COVID2022ssaem$location=="Somalia" | COVID2022ssaem$location=="South Africa" |
COVID2022ssaem$location=="South Sudan" | COVID2022ssaem$location=="Sudan" | COVID2022ssaem$location=="Tanzania" | COVID2022ssaem$location=="Togo" |
COVID2022ssaem$location=="Uganda" | COVID2022ssaem$location == "Zambia" | COVID2022ssaem$location == "Zimbabwe"),]
COVID2022ssaemm <- merge(COVID2022ssaem, COVID2022ssa, by=c("location"))
COVID2022ssaemm <- COVID2022ssaemm[ which(COVID2022ssaemm$population >= 1000000), ]
COVID2022ssaemm
nrow(COVID2022ssaemm)
#Creating CFR
t.test(COVID2022ssaemm$estimated_daily_excess_deaths_per_100k)
library("plotrix")
op <- std.error(COVID2022ssaemm$estimated_daily_excess_deaths_per_100k)
op
#2021
#SSA
##Descriptive CFR
setwd('D:\\Update3\\Update4\\Update5\\Update6')
COVIDssa <- read.csv("COVID_SSAU.csv") # Updated with previous reported data
COVIDssa <- subset(COVIDssa, COVIDssa$date == "2021-01-05") #5/29/2021
COVIDssa <- COVIDssa[which(COVIDssa$population >= 1000000), ]
#Remove World and International information
COVIDssa<-COVIDssa[(COVIDssa$location=="Angola" | COVIDssa$location=="Benin" | COVIDssa$location=="Botswana" | COVIDssa$location=="Burkina Faso" |
COVIDssa$location=="Burundi" | COVIDssa$location=="Cameroon" | COVIDssa$location=="Central African Republic" | COVIDssa$location=="Chad" |
COVIDssa$location=="Democratic Republic of Congo" | COVIDssa$location == "Congo" | COVIDssa$location == "Cote d'Ivoire" | COVIDssa$location=="Djibouti" |
COVIDssa$location=="Equatorial Guinea" | COVIDssa$location=="Eritrea" | COVIDssa$location=="Ethiopia" |
COVIDssa$location=="Gabon" | COVIDssa$location=="Gambia" | COVIDssa$location=="Ghana" | COVIDssa$location=="Guinea" |
COVIDssa$location=="Guinea-Bissau" | COVIDssa$location == "Kenya" | COVIDssa$location == "Lesotho" | COVIDssa$location=="Liberia" |
COVIDssa$location=="Madagascar" | COVIDssa$location=="Malawi" | COVIDssa$location=="Mali" |
COVIDssa$location=="Mauritania" | COVIDssa$location=="Mauritius" | COVIDssa$location=="Mozambique" | COVIDssa$location=="Namibia" |
COVIDssa$location=="Niger" | COVIDssa$location == "Nigeria" | COVIDssa$location == "Rwanda" | COVIDssa$location=="Senegal" |
COVIDssa$location=="Sierra Leone" | COVIDssa$location=="Somalia" | COVIDssa$location=="South Africa" |
COVIDssa$location=="South Sudan" | COVIDssa$location=="Sudan" | COVIDssa$location=="Tanzania" | COVIDssa$location=="Togo" |
COVIDssa$location=="Uganda" | COVIDssa$location == "Zambia" | COVIDssa$location == "Zimbabwe"),]
#Creating CFR
COVIDssa$CFR <- (COVIDssa$total_deaths/COVIDssa$total_cases)*100
t.test(COVIDssa$CFR)
library("plotrix")
op <- std.error(COVIDssa$CFR)
op
t.test(COVIDssa$CFR, COVID2022ssa$CFR, paired = TRUE, alternative = "two.sided")
setwd('D:\\Update3\\Update4\\Update5\\Update6')
COVIDssaem <- read.csv("excess-deaths-daily-per-100k-economist.csv")
COVIDssaem$date <-  COVIDssaem$Day
COVIDssaem$iso_code <-  COVIDssaem$Code
COVIDssaem$location <-  COVIDssaem$Entity
COVIDssaem <- subset(COVIDssaem, COVIDssaem$date == "2021-01-04") #5/29/2021
#Remove World and International information
COVIDssaem<-COVIDssaem[(COVIDssaem$location=="Angola" |COVIDssaem$location=="Benin" |COVIDssaem$location=="Botswana" | COVIDssaem$location=="Burkina Faso" |
COVIDssaem$location=="Burundi" | COVIDssaem$location=="Cameroon" | COVIDssaem$location=="Central African Republic" | COVIDssaem$location=="Chad" |
COVIDssaem$location=="Democratic Republic of Congo" | COVIDssaem$location == "Congo" | COVIDssaem$location == "Cote d'Ivoire" | COVIDssaem$location=="Djibouti" |
COVIDssaem$location=="Equatorial Guinea" | COVIDssaem$location=="Eritrea" | COVIDssaem$location=="Ethiopia" |
COVIDssaem$location=="Gabon" | COVIDssaem$location=="Gambia" | COVIDssaem$location=="Ghana" | COVIDssaem$location=="Guinea" |
COVIDssaem$location=="Guinea-Bissau" | COVIDssaem$location == "Kenya" | COVIDssaem$location == "Lesotho" | COVIDssaem$location=="Liberia" |
COVIDssaem$location=="Madagascar" | COVIDssaem$location=="Malawi" |COVIDssaem$location=="Mali" |
COVIDssaem$location=="Mauritania" | COVIDssaem$location=="Mauritius" |COVIDssaem$location=="Mozambique" | COVIDssaem$location=="Namibia" |
COVIDssaem$location=="Niger" | COVIDssaem$location == "Nigeria" | COVIDssaem$location == "Rwanda" | COVIDssaem$location=="Senegal" |
COVIDssaem$location=="Sierra Leone" | COVIDssaem$location=="Somalia" | COVIDssaem$location=="South Africa" |
COVIDssaem$location=="South Sudan" | COVIDssaem$location=="Sudan" | COVIDssaem$location=="Tanzania" | COVIDssaem$location=="Togo" |
COVIDssaem$location=="Uganda" | COVIDssaem$location == "Zambia" | COVIDssaem$location == "Zimbabwe"),]
COVIDssaemm <- merge(COVIDssaem, COVIDssa, by=c("location"))
COVIDssaemm <- COVIDssaemm[ which(COVIDssaemm$population >= 1000000), ]
nrow(COVIDssaemm)
#Creating CFR
t.test(COVIDssaemm$estimated_daily_excess_deaths_per_100k)
library("plotrix")
op <- std.error(COVIDssaemm$estimated_daily_excess_deaths_per_100k)
op
t.test(COVIDssaemm$estimated_daily_excess_deaths_per_100k, COVID2022ssaemm$estimated_daily_excess_deaths_per_100k, paired = TRUE, alternative = "two.sided")
World <- read.csv("ModelData159.csv")
library(glmmTMB)
World$Vaccinationph2
World$vml <- World$Vaccinationph2
World$vml2 <- scale(World$Vaccinationph2)
World$lw <- scale(World$Weeks)
World$TTs <- World$TotalTestpt
World$TTs2 <- scale(World$TTs)
World$GDP2 <- scale(World$GDP)
World$PopulationDensity2 <- World$PopulationDensity
World$PopulationDensity22 <- scale(World$PopulationDensity2)
World$GHSI2 <- scale(World$GHSI)
World$WGI2 <- scale(World$WGI)
World$Age65Older2 <- World$Age65Older
World$Age65Older22 <- scale(World$Age65Older2)
World$Obesity_rate2 <- World$Obesity_rate
World$Obesity_rate22 <- scale(World$Obesity_rate2)
World$CFR2 <- World$CFR/100
World$CFR22 <- scale(World$CFR2)
World$SI2 <- scale(World$SI)
World$location <- as.factor(World$location)
nrow(World)
library(glmmTMB)
library(DHARMa)
library(performance)
summary(World$CFR2)
World$CFR2[World$CFR2 == 1] <- NA
World$CFR2[World$CFR2 == 0] <- NA
f <- subset(World, !is.na(World$TotalTestpt))
f
f <- factor(f$location)
f
World$CFR
#ARIMA
library(forecast)
library(MASS)
library(tseries)
library(forecast)
library(lubridate)
library(ggplot2)
library(zoo)
library(Rcpp)
library(prophet)
library(data.table)
library(dplyr)
library(ggplot2)
COVID <- read.csv("owid-covid-data.csv")
COVID <- subset(COVID, COVID$date >= "2020-01-01") #1/1/2020
COVID <- subset(COVID, COVID$date <= "2022-12-31") #5/29/2021
# World information
COVID_WRL<-COVID[(COVID$iso_code=="OWID_WRL"),]
str(COVID_WRL)
#Creating CFR
COVID_WRL$CFR <- (COVID_WRL$total_deaths/COVID_WRL$total_cases)*100
COVID_WRL$CFR
NROW(COVID_WRL$CFR)
myts <- ts(COVID_WRL$CFR,frequency=365, start=c(2020,6))
auto.arima(myts)
Fit<-Arima(myts,order=c(4,1,3))
summary(Fit)
fcast <- forecast(Fit, h=10)
z <- autoplot(fcast, size = 2,geom = "point")  +
autolayer(fcast$mean, series="Forecast", lwd = 0.6) +
autolayer(fitted(Fit), series='Fitted', lwd = 0.6) +
autolayer(fcast$lower, series='lower') +
autolayer(fcast$upper, series='upper') +
xlab("Months") + ylab("Reported CFR (%)") +ggtitle("ARIMA Model")+
guides(colour=guide_legend(title="Observed data"),
fill=guide_legend(title="Prediction interval"))+ theme(legend.position="bottom") +
theme( legend.title = element_text(color = "Black", size = 8),
legend.text = element_text(color = "Black", size = 8))
z
#R2
SSE <- sum((resid(Fit[1:1075]))^2)
SST <- sum((COVID_WRL$CFR[1:1075] - mean(COVID_WRL$CFR[1:1075]))^2)
R_square <- 1 - SSE / SST
R_square
library(tidyverse)
library(fpp2)
library(ggfortify)
ses.goog <- ses(myts,
h = 10)
summary(ses.goog)
fcast <- forecast(ses.goog, h=10)
x <- autoplot(ses.goog, size = 2,geom = "point")  +
autolayer(fcast$mean, series="Forecast", lwd = 0.6) +
autolayer(fitted(Fit), series='Fitted', lwd = 0.6) +
autolayer(fcast$lower, series='lower') +
autolayer(fcast$upper, series='upper') +
xlab("") + ylab("Reported CFR (%)") + ggtitle("SES Model")+
guides(colour=guide_legend(title="Observed data"),
fill=guide_legend(title="Prediction interval"))+ theme(legend.position="bottom",
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme( legend.title = element_text(color = "Black", size = 8),
legend.text = element_text(color = "Black", size = 8))
x
#R2
SSE <- sum((resid(ses.goog[1:1075]))^2)
SST <- sum((COVID_WRL$CFR[1:1075] - mean(COVID_WRL$CFR[1:1075]))^2)
R_square <- 1 - SSE / SST
R_square
#Prophet
library(prophet)
history <- data.frame(ds = seq(as.Date('2020-01-22'), as.Date('2022-12-31'), by = 'd'),
y = COVID_WRL$CFR)
NROW(COVID_WRL$CFR)
m3 <- prophet(history)
future <- make_future_dataframe(m3, periods = 10)
fcst3 <- predict(m3, future)
summary(m3)
y <-plot(m3, fcst3, xlab="Months", ylab="Reported CFR (%)") + ggtitle("Prophet Model") + theme(
plot.title = element_text(size=12), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
plot(y)
SSE <- sum((history$y[1:1075] - fcst3$yhat[c(1:1075)])^2)
SST <- sum((history$y[1:1075] - mean(history$y[1:1075]))^2)
R_square <- 1 - SSE / SST
R_square
last_fcst3 <- fcst3[1075,]
rmse <- sqrt(mean((history$y - fcst3$yhat[c(1:1075)])^2))
mae <- mean(abs((history$y - fcst3$yhat[c(1:1075)])))
final <- cbind(last_fcst3, rmse, mae)
final
tiff("CFR.tiff", units="in", width=4, height=8, res=300)
gridExtra::grid.arrange(y,x,z)
dev.off()
#Menn kendal
library(Kendall)
library(trend)
world_CFR <- aggregate(ModelData$CFR, by= list(ModelData$Weeks), FUN=mean, na.rm=TRUE)
myts <- ts(world_CFR$x[4:159])
t.test(world_CFR$x[4:159])$"conf.int"
mean(world_CFR$x[4:159])
MannKendall(myts)
sens.slope(myts, conf.level = 0.95)
#GLMM Excess mortality
#Data Management
setwd('D:\\Update3\\Update4\\Update5\\Update6')
COVID <- read.csv("excess-deaths-daily-per-100k-economist.csv")
COVID$date <-  COVID$Day
COVID$iso_code <-  COVID$Code
COVID$location <-  COVID$Entity
#Week transformation (daily to weekly)
library(lubridate)
COVID$date2 <- as.Date(as.character(COVID$date),format="%Y-%m-%d")
COVID$date2
COVID$Week <- week(as.Date(as.character(COVID$date2),format="%Y-%m-%d"))
COVID$Week
x <- nrow(COVID)
COVID$Week2 <- COVID$Week
for (i in 1:x) {
if (COVID$date[i] >= "2021-01-01")
COVID$Week2[i] = COVID$Week[i]+53
}
for (i in 1:x) {
if (COVID$date[i] >= "2022-01-01")
COVID$Week2[i] = COVID$Week[i]+106
}
print(COVID$Week2)
summary(COVID$Week2)
world_em <- aggregate(COVID$estimated_daily_excess_deaths_per_100k, by= list(COVID$Week2, COVID$location), FUN=sum, na.rm=TRUE) # Seasonal mean mean EIP of 22,006 Farms (3 seasons)
world_em
colnames(world_em) <- c("Weeks", "location", "EM")
world_em
# COVID2 <- read.csv("owid-covid-data.csv")
World <- read.csv("ModelData159.csv")
COVID <- merge(world_em, World, by=c("location", "Weeks"))
options(scipen = 999)
World <- COVID
library(glmmTMB)
World$Vaccinationph2
World$vml <- World$Vaccinationph2
World$vml2 <- scale(World$Vaccinationph2)
World$lw <- scale(World$Weeks)
World$TTs <- World$TotalTestpt
World$TTs2 <- scale(World$TTs)
World$GDP2 <- scale(World$GDP)
World$PopulationDensity2 <- World$PopulationDensity
World$PopulationDensity22 <- scale(World$PopulationDensity2)
World$GHSI2 <- scale(World$GHSI)
World$WGI2 <- scale(World$WGI)
World$Age65Older2 <- World$Age65Older
World$Age65Older22 <- scale(World$Age65Older2)
World$Obesity_rate2 <- World$Obesity_rate
World$Obesity_rate22 <- scale(World$Obesity_rate2)
World$SI2 <- scale(World$SI)
library(glmmTMB)
library(DHARMa)
library(performance)
World$EMs <- (World$EM-min(World$EM))/(max(World$EM)-min(World$EM))
World$EMs
World$EMs[World$EMs == 0] <- NA
World$EMs[World$EMs == 1] <- NA
fit <- glmmTMB(EMs~ vml2 + Age65Older22 + PopulationDensity22
+ TTs2 + GDP2 + GHSI2
+ WGI2 + Obesity_rate22 + SI2 + lw + (1|location) + (1| lw), na.action=na.omit, family = beta_family(link = "logit"), data = World)
World <- read.csv("ModelData159.csv")
COVID2022 <- merge(world_em, World, by=c("location", "Weeks"))
summary(world_em)
COVID2022 <- subset(COVID2022, COVID2022$Weeks == 159) #5/29/20
COVID2022$location[COVID2022$location == 'United States'] <- 'USA'
COVID2022$location[COVID2022$location == 'United Kingdom'] <- 'UK'
COVID2022$location[COVID2022$location == 'Democratic Republic of Congo'] <- 'Democratic Republic of the Congo'
COVID2022$location[COVID2022$location == 'Congo'] <- 'Republic of Congo'
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
options(scipen = 999) ## To disable scientific notation
world <- map_data("world")
worldplot <- ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
worldplot
COVID2022$emlog <- log10(COVID2022$EM)+1
COVID2022$emlog[COVID2022$emlog == 'NaN'] <- 0
worldgovt <- dplyr::select(COVID2022, region = location, emlog = emlog, "CC" =  ï..iso_code)
head(worldgovt)
## Make the HDI numeric
worldgovt$em <- as.numeric(as.character(worldgovt$emlog))
worldSubset <- inner_join(world, worldgovt, by = "region")
head(worldSubset)
## Let's ditch many of the unnecessary elements
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldCFR <- ggplot(data = worldSubset, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = em)) +
scale_fill_distiller(palette ="Reds", direction = 1) + # or direction=1
ggtitle("") + labs(fill = "Excess mortality") +
plain
x <- plot(worldCFR)
x
COVID22 <- subset(COVID2022, COVID2022$Weeks == 159) #5/29/2021
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
options(scipen = 999) ## To disable scientific notation
world <- map_data("world")
worldplot <- ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
worldplot
COVID22$cfrlog <- log10(COVID22$Vaccinationph2)+1
worldgovt <- dplyr::select(COVID22, region = location, cfrlog = cfrlog, "CC" =  ï..iso_code)
head(worldgovt)
## Make the HDI numeric
worldgovt$CFR <- as.numeric(as.character(worldgovt$cfrlog))
worldSubset <- inner_join(world, worldgovt, by = "region")
head(worldSubset)
## Let's ditch many of the unnecessary elements
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldCFR <- ggplot(data = worldSubset, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = CFR)) +
scale_fill_distiller(palette ="Reds", direction = 1) + # or direction=1
ggtitle("") + labs(fill = "Vaccination \n(doses/100 people)") +
plain
y <- plot(worldCFR)
y
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)
options(scipen = 999) ## To disable scientific notation
world <- map_data("world")
worldplot <- ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
worldplot
COVID2022$cfrlog <- log10(COVID22$CFR*100) +1
worldgovt <- dplyr::select(COVID2022, region = location, cfrlog = cfrlog, "CC" =  ï..iso_code)
head(worldgovt)
diff <- setdiff(world$region, worldgovt$region)
worldSubset <- inner_join(world, worldgovt, by = "region")
## Make the HDI numeric
worldgovt$CFR <- as.numeric(as.character(worldgovt$cfrlog))
worldSubset <- inner_join(world, worldgovt, by = "region")
head(worldSubset)
## Let's ditch many of the unnecessary elements
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldCFR <- ggplot(data = worldSubset, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = CFR)) +
scale_fill_distiller(palette ="Reds", direction = 1) + # or direction=1
ggtitle("") + labs(fill = "Reported CFR (%)") +
plain
z <- plot(worldCFR)
z
tiff("Map.tiff", units="in", width=6, height=6, res=300)
g <- gridExtra::grid.arrange(y,z,x)
ggsave(file="Map.pdf", g,width = 6, height = 6, dpi = 300, units = "in") #saves g
dev.off()
cor (COVID22$CFR , COVID22$Vaccinationph2, method = c("pearson"), use = "complete.obs")
cor.test(COVID22$CFR , COVID22$Vaccinationph2, method = c("pearson"), use = "complete.obs")
